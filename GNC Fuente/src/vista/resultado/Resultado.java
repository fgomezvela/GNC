/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.resultado;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JFrame;
import vista.VentanaPrincipal;

/**
 *
 * @author JoseAntonio
 */
public class Resultado extends JFrame {

    private String BD;
    private float coherencia,coherenciaPPV,coherenciaF;
    private String input;
    private int genesComunes;
    private int nodosDB;
    private int nodosIn;
    private int arIn;
    private int arDB;
    private String rutaComparaciones;
    private VentanaPrincipal padre;

    /**
     * Creates new form Resultado
     */
    public Resultado(String input, float coherencia,float coherenciaPPV,float coherenciaF, String BD, int genesComunes, int nodosIn, int nodosDB, int arIn, int arDB, String rutaComparaciones, VentanaPrincipal padre) {
        initComponents();
        this.padre = padre;
        this.BD = BD;
        this.input = input;
        this.setLocationRelativeTo(null);
        this.coherencia = coherencia;
        this.coherenciaF = coherenciaF;
        this.coherenciaPPV = coherenciaPPV;
        setTitle("GNC - " + input + " / " + BD);
        this.CoheL.setText(String.valueOf(coherencia));
        this.ppvL.setText(String.valueOf(coherenciaPPV));
        this.fmL.setText(String.valueOf(coherenciaF));
        this.INL.setText(input);
        this.DBL.setText(BD);
        this.setLocationRelativeTo(null);
        this.genesComunes = genesComunes;
        this.genesComunesL.setText(String.valueOf(genesComunes));
        this.nodosDB = nodosDB;
        this.nodosIn = nodosIn;
        this.arDB = arDB;
        this.arIn = arIn;
        this.rutaComparaciones = rutaComparaciones;
        cambiarValoresTabla();
        Comparacion c = new Comparacion(input, BD, nodosIn, nodosDB, arIn, arDB, coherencia,coherenciaPPV,coherenciaF, calcularDensidad(nodosIn, arIn), calcularDensidad(nodosDB, arDB), genesComunes);
        escribirFicheroComparacion(c, rutaComparaciones);
        this.padre.cambiarTexto("Ready");
        this.setTitle("GNC");
        this.padre.habilitarStart(true);
        clean();
    }

    public Resultado(String BD, float coherencia,float coherenciaPPV,float coherenciaF, String input, int genesComunes, int nodosIn, int nodosDB, int arIn, int arDB) {
        initComponents();
        this.BD = BD;
        this.input = input;
        this.setLocationRelativeTo(null);
        this.coherencia = coherencia;
        setTitle("GNC - " + input + " / " + BD);
        this.CoheL.setText(String.valueOf(coherencia));
        this.ppvL.setText(String.valueOf(coherenciaPPV));
        this.fmL.setText(String.valueOf(coherenciaF));
        this.INL.setText(input);
        this.DBL.setText(BD);
        this.setLocationRelativeTo(null);
        this.genesComunes = genesComunes;
        this.genesComunesL.setText(String.valueOf(genesComunes));
        this.nodosDB = nodosDB;
        this.nodosIn = nodosIn;
        this.arDB = arDB;
        this.arIn = arIn;
        this.setTitle("GNC");
        cambiarValoresTabla();
        clean();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CloseB = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DBL = new javax.swing.JLabel();
        CoheL = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        INL = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ResultadosTabla = new javax.swing.JTable();
        genesComunesL = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ppvL = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        fmL = new javax.swing.JLabel();

        jButton1.setText("PDF");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(434, 502));
        setResizable(false);

        CloseB.setText("Close");
        CloseB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Database");

        jLabel2.setText("GNC value");

        DBL.setText("jLabel3");

        CoheL.setText("jLabel3");

        jLabel4.setText("Input Network");

        INL.setText("jLabel5");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Basic Information");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Further Information");

        jLabel6.setText("Number Common Genes");

        jLabel7.setText("Size");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        ResultadosTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Attributes", "Input Network", "Biological Database"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ResultadosTabla);

        jPanel2.add(jScrollPane3);

        genesComunesL.setText("jLabel8");

        jLabel8.setText("PPV value");

        ppvL.setText("jLabel9");

        jLabel10.setText("F-Measure value");

        fmL.setText("jLabel11");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CoheL))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DBL))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(INL))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ppvL))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fmL))
                    .addComponent(jSeparator1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(genesComunesL))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(INL))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(DBL))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CoheL))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ppvL))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(fmL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(genesComunesL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CloseB, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CloseB, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_CloseBActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseB;
    private javax.swing.JLabel CoheL;
    private javax.swing.JLabel DBL;
    private javax.swing.JLabel INL;
    private javax.swing.JTable ResultadosTabla;
    private javax.swing.JLabel fmL;
    private javax.swing.JLabel genesComunesL;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel ppvL;
    // End of variables declaration//GEN-END:variables

    private void cambiarValoresTabla() {
        this.ResultadosTabla.setValueAt((String) "Nodes", 0, 0);
        this.ResultadosTabla.setValueAt((String) "Edges", 1, 0);
        this.ResultadosTabla.setValueAt((String) "Density", 2, 0);

        this.ResultadosTabla.setValueAt((String) "" + String.valueOf(this.getNodosIn()), 0, 1);
        this.ResultadosTabla.setValueAt((String) "" + String.valueOf(this.getNodosDB()), 0, 2);
        this.ResultadosTabla.setValueAt((String) "" + String.valueOf(this.getArIn()), 1, 1);
        this.ResultadosTabla.setValueAt((String) "" + String.valueOf(this.getArDB()), 1, 2);
        this.ResultadosTabla.setValueAt((String) "" + String.format("%.2f", calcularDensidad(this.getNodosIn(), this.getArIn())), 2, 1);
        this.ResultadosTabla.setValueAt((String) "" + String.format("%.2f", calcularDensidad(this.getNodosDB(), this.getArDB())), 2, 2);

    }

    public int getNodosDB() {
        return nodosDB;
    }

    public int getNodosIn() {
        return nodosIn;
    }

    public int getArIn() {
        return arIn;
    }

    public int getGenesComunes() {
        return genesComunes;
    }

    public int getArDB() {
        return arDB;
    }

    public void setGenesComunes(int genesComunes) {
        this.genesComunes = genesComunes;
    }

    private float calcularDensidad(int nodosIn, int arIn) {
        float densidad = (float) 0;
        densidad = (float) ((float) 2 * (float) arIn) / (float) ((float) nodosIn * ((float) nodosIn - (float) 1));
        return densidad;
    }

    private void escribirFicheroComparacion(Comparacion c, String rutaComparaciones) {
        if (!buscarResultados(c.getNombreDB(), c.getNombreInput())) {
            FileWriter fichero = null;
            PrintWriter pw = null;
            try {
                fichero = new FileWriter(rutaComparaciones, true);
                pw = new PrintWriter(fichero);
                pw.println(c.getNombreInput() + ";" + c.getNombreDB() + ";" + c.getNodosIN() + ";" + c.getNodosDB() + ";" + c.getArIN() + ";" + c.getArDB() + ";" + c.getCoherencia() + ";" + c.getCoherenciaPPV() + ";" + c.getCoherenciaF()+ ";" + c.getDensidadIn() + ";" + c.getDensidadDB() + ";" + c.getGenesComunes());
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (null != fichero) {
                        fichero.close();
                    }
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }
            //avisar a Vprincipal q se ha cambiado la tabla para q actualice.
            padre.cambiarModeloTabla();
        }
    }

    private boolean buscarResultados(String BD, String input) {
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        boolean encontrado = false;
        try {
            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine()).
            archivo = new File(this.rutaComparaciones);
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);

            // Lectura del fichero
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] separar = linea.split(";");
                if ((separar[0].compareToIgnoreCase(input) == 0 && separar[1].compareToIgnoreCase(BD) == 0) || (separar[1].compareToIgnoreCase(input) == 0 && separar[0].compareToIgnoreCase(BD) == 0)) {
                    encontrado = true;
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        return encontrado;
    }

    private void clean() {
        File f = new File(System.getProperty("user.dir"));
        String[] lista = f.list();
        for (int i = 0; i < lista.length; i++) {
            File borrar = new File(f + lista[i]);
            if (lista[i].endsWith(".txt") && borrar.isFile() && borrar.length()==0) {
                borrar.delete();
            }
        }

    }
}
